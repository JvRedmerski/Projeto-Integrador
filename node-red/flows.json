[
    {
        "id": "c269a0291bfb85dd",
        "type": "function",
        "z": "0bdcbfbb92e8e12f",
        "name": "Click pedido",
        "func": "node.warn(\"Payload recebido:\");\nnode.warn(JSON.stringify(msg.payload));\n\nlet chatId = msg.payload.chatId;\nlet escolha = msg.payload.content;\nlet estado = flow.get(chatId + \"_estado\");\nlet pedido = flow.get(chatId + \"_pedido\") || [];\n\npedido.push(escolha);\nflow.set(chatId + \"_pedido\", pedido);\n\nlet proximaEtapa = pedido.length;\n\nif (proximaEtapa === 1) {\n    flow.set(chatId + \"_estado\", \"awaiting_item_2\");\n} else if (proximaEtapa === 2) {\n    flow.set(chatId + \"_estado\", \"awaiting_item_3\");\n} else if (proximaEtapa === 3) {\n    flow.set(chatId + \"_estado\", \"completed\");\n\n    let nome = flow.get(chatId + \"_nome\");\n\n    msg.payload = {\n        chatId,\n        type: \"message\",\n        content: `Obrigado, ${nome}! Seu pedido entrará em produção em breve!\\n\\nPeças escolhidas:\\n- ${pedido[0]}\\n- ${pedido[1]}\\n- ${pedido[2]}`\n    };\n\n    // ✅ Limpeza depois de usar os dados\n    flow.set(chatId + \"_estado\", null);\n    flow.set(chatId + \"_pedido\", []);\n    flow.set(chatId + \"_nome\", null);\n\n    return msg;\n}\n\nmsg.payload = {\n    chatId,\n    type: \"message\",\n    content: \"Escolha a próxima peça:\",\n    options: {\n        reply_markup: {\n            inline_keyboard: [\n                [{ text: \"Redonda\", callback_data: \"Redonda\" }],\n                [{ text: \"Hexagonal\", callback_data: \"Hexagonal\" }],\n                [{ text: \"Quadrada\", callback_data: \"Quadrada\" }]\n            ]\n        }\n    }\n};\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 120,
        "wires": [
            [
                "41946784d6850fcd",
                "f97c4518999b93e1"
            ]
        ]
    }
]